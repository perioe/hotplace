plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
    id 'war'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.hotplace'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def queryDSLVersion = '4.2.1'

configurations.all {
    resolutionStrategy {
        force 'com.google.guava:guava:15.0'
        force 'org.javassist:javassist:3.23.2-GA'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile('org.springframework.boot:spring-boot-starter-web')

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    // QueryDSL
    compile("com.querydsl:querydsl-core:${queryDSLVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDSLVersion}")
    compile("com.querydsl:querydsl-apt:${queryDSLVersion}")
    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDSLVersion}:jpa",
            "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
            "javax.annotation:javax.annotation-api:1.3.2",
            "org.projectlombok:lombok"
    )
}

def queryDslOutput = file("src/main/generated")


compileJava {
    options.annotationProcessorGeneratedSourcesDirectory = queryDslOutput
    options.annotationProcessorPath = configurations.compile + configurations.compileOnly + configurations.annotationProcessor
}

sourceSets {
    main {
        java {
            srcDirs queryDslOutput
        }
    }
}

clean {
    delete queryDslOutput
}
